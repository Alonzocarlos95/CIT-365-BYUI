<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>